// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Products {
  id            Int          @id @default(autoincrement())
  productName   String
  description   String?      @db.Text
  price         Float
  imageUrl      String
  Order         Order[]
  Category      Category?    @relation(fields: [categoryId], references: [id])
  categoryId    Int?
  review        Review[]
  SubCategory   SubCategory? @relation(fields: [subCategoryId], references: [id])
  subCategoryId Int?
}

model employees {
  id          Int    @id @default(autoincrement())
  fullname    String
  age         String
  adresse     String
  mobilephone String

  email String
}
model clients {
  id          Int    @id @default(autoincrement())
  fullname    String
  age         String
  adresse     String
  mobilephone String
password String
  email String
}

model users {
  id Int @id @default(autoincrement())

  email String @unique

  fullname    String
  age         Int
  adresse     String
  mobilephone String
  Password    String

  reviews Review[]
}

model Order {
  id          Int        @id @default(autoincrement())
  orderNumber String
  price       Float
  products    Products[]
}

model ProductsTrending {
  id             Int    @id @default(autoincrement())
  image          String
  title          String
  previous_price String
  current_price  String
  description    String
}

model Packs {
  id    Int    @id @default(autoincrement())
  image String
  title String
  price String
}

model Category {
  id       Int    @id @default(autoincrement())
  name     String
  imageUrl String

  products    Products[]
  subCategory SubCategory[]
}

model SubCategory {
  id         Int        @id @default(autoincrement())
  name       String
  imageUrl   String
  products   Products[]
  Category   Category?  @relation(fields: [categoryId], references: [id])
  categoryId Int?
}

model Review {
  id      Int    @id @default(autoincrement())
  name    String
  content String
  rating  String

  Products   Products? @relation(fields: [productsId], references: [id])
  productsId Int?
  users      users?    @relation(fields: [usersId], references: [id])
  usersId    Int?
}
